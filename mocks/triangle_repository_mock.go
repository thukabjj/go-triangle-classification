// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/gateway/repository/triangle/triangle_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/thukabjj/go-triangle-classification/domain"
)

// MockTriangleRepository is a mock of TriangleRepository interface.
type MockTriangleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTriangleRepositoryMockRecorder
}

// MockTriangleRepositoryMockRecorder is the mock recorder for MockTriangleRepository.
type MockTriangleRepositoryMockRecorder struct {
	mock *MockTriangleRepository
}

// NewMockTriangleRepository creates a new mock instance.
func NewMockTriangleRepository(ctrl *gomock.Controller) *MockTriangleRepository {
	mock := &MockTriangleRepository{ctrl: ctrl}
	mock.recorder = &MockTriangleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTriangleRepository) EXPECT() *MockTriangleRepositoryMockRecorder {
	return m.recorder
}

// Store mocks base method.
func (m *MockTriangleRepository) Store(triangle *domain.Triangle) *domain.Triangle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", triangle)
	ret0, _ := ret[0].(*domain.Triangle)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockTriangleRepositoryMockRecorder) Store(triangle interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockTriangleRepository)(nil).Store), triangle)
}
