// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/authentication/jwt_token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/thukabjj/go-triangle-classification/domain"
)

// MockJwtToken is a mock of JwtToken interface.
type MockJwtToken struct {
	ctrl     *gomock.Controller
	recorder *MockJwtTokenMockRecorder
}

// MockJwtTokenMockRecorder is the mock recorder for MockJwtToken.
type MockJwtTokenMockRecorder struct {
	mock *MockJwtToken
}

// NewMockJwtToken creates a new mock instance.
func NewMockJwtToken(ctrl *gomock.Controller) *MockJwtToken {
	mock := &MockJwtToken{ctrl: ctrl}
	mock.recorder = &MockJwtTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtToken) EXPECT() *MockJwtTokenMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJwtToken) GenerateToken(username, password string) (*domain.Authentication, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", username, password)
	ret0, _ := ret[0].(*domain.Authentication)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtTokenMockRecorder) GenerateToken(username, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwtToken)(nil).GenerateToken), username, password)
}

// ValidateCredentials mocks base method.
func (m *MockJwtToken) ValidateCredentials(username, password string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCredentials", username, password)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateCredentials indicates an expected call of ValidateCredentials.
func (mr *MockJwtTokenMockRecorder) ValidateCredentials(username, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCredentials", reflect.TypeOf((*MockJwtToken)(nil).ValidateCredentials), username, password)
}
